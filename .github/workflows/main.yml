name: 推送有标签为v开头则以标签名称发布版本

on:
  push:
    tags:
      - "v*"
 
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Get TAG_NAME
        run: |
          find . -name ".git" | xargs rm -Rf
          find . -name ".github" | xargs rm -Rf
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          pwd
          cd ..
          pwd
      
      - name: Zip project folder
        run: zip -q -r ${{ github.event.repository.name }}.zip ./${{ github.event.repository.name }}

      - name: Create new release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHU_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.TAG_NAME }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      - name: Upload zip file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHU_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
          
      - name: 消息字符串JSON格式化
        run: |
          contents="GITHUB\r\n仓库:${{github.repository}}\r\n发布:${{ env.TAG_NAME }}\r\n说明:${{ github.event.head_commit.message }}\r\n下载地址:${{ steps.create_release.outputs.upload_url }}"
          json_var=$(echo $contents | jq -R -s -c 'split("\n")[:-1]')
          echo "DD_CONTENTS=$json_var" >> $GITHUB_ENV
          
      - name: 给钉钉机器人发送消息
        env:
          WEBHOOK: ${{ secrets.DINGDING_WEBHOOK }}
        run: |
          curl -X POST \
            $WEBHOOK \
            -H 'Content-Type: application/json' \
            -d '{"msgtype": "text","text": {"content": "${{ env.DD_CONTENTS }}"}}'
